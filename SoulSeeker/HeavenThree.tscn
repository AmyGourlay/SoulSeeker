[gd_scene load_steps=16 format=2]

[ext_resource path="res://game_background_2/layers/clouds_2.png" type="Texture" id=1]
[ext_resource path="res://game_background_2/layers/sky.png" type="Texture" id=2]
[ext_resource path="res://ScreenShake.gd" type="Script" id=3]
[ext_resource path="res://Enemy.tscn" type="PackedScene" id=4]
[ext_resource path="res://ChangeStage.tscn" type="PackedScene" id=5]
[ext_resource path="res://PauseScreen.tscn" type="PackedScene" id=6]
[ext_resource path="res://Player.tscn" type="PackedScene" id=7]
[ext_resource path="res://heavenTiles.tres" type="TileSet" id=8]
[ext_resource path="res://Star.tscn" type="PackedScene" id=9]
[ext_resource path="res://assets/Ove-Melaa-Supa-Powa-Loop-A.ogg" type="AudioStream" id=10]
[ext_resource path="res://Spike.tscn" type="PackedScene" id=11]
[ext_resource path="res://BlueDragon.tscn" type="PackedScene" id=12]
[ext_resource path="res://HeavenThree.gd" type="Script" id=13]
[ext_resource path="res://HeavenBat.tscn" type="PackedScene" id=14]

[sub_resource type="GDScript" id=1]
script/source = "extends TileMap


## Variables to be set when the node is ready


# Reference to a new AStar navigation grid node
onready var astar = AStar.new()

# Used to find the centre of a tile
onready var half_cell_size = cell_size / 2

# All tiles that can be used for pathfinding
onready var traversable_tiles = get_used_cells()

# The bounds of the rectangle containing all used tiles on this tilemap
onready var used_rect = get_used_rect()


func _ready():

	# This would hide the navigation_map upon loading, but we'll keep
	# it commented for this demo - uncomment for your game, most likely
	# visible = false

	# Add all tiles to the navigation grid
	_add_traversable_tiles(traversable_tiles)

	# Connects all added tiles
	_connect_traversable_tiles(traversable_tiles)


## Private functions


# Adds tiles to the A* grid but does not connect them
# ie. They will exist on the grid, but you cannot find a path yet
func _add_traversable_tiles(traversable_tiles):

	# Loop over all tiles
	for tile in traversable_tiles:

		# Determine the ID of the tile
		var id = _get_id_for_point(tile)

		# Add the tile to the AStar navigation
		# NOTE: We use Vector3 as AStar is, internally, 3D. We just don't use Z.
		astar.add_point(id, Vector3(tile.x, tile.y, 0))


# Connects all tiles on the A* grid with their surrounding tiles
func _connect_traversable_tiles(traversable_tiles):

	# Loop over all tiles
	for tile in traversable_tiles:

		# Determine the ID of the tile
		var id = _get_id_for_point(tile)

		# Loops used to search around player (range(3) returns 0, 1, and 2)
		for x in range(3):
			for y in range(3):

				# Determines target, converting range variable to -1, 0, and 1
				var target = tile + Vector2(x - 1, y - 1)

				# Determines target ID
				var target_id = _get_id_for_point(target)

				# Do not connect if point is same or point does not exist on astar
				if tile == target or not astar.has_point(target_id):
					continue

				# Connect points
				astar.connect_points(id, target_id, true)


# Determines a unique ID for a given point on the map
func _get_id_for_point(point):

	# Offset position of tile with the bounds of the tilemap
	# This prevents ID's of less than 0, if points are behind (0, 0)
	var x = point.x - used_rect.position.x
	var y = point.y - used_rect.position.y

	# Returns the unique ID for the point on the map
	return x + y * used_rect.size.x


## Public functions

# Returns a path from start to end
# These are real positions, not cell coordinates
func get_pathx(start, end):

	# Convert positions to cell coordinates
	var start_tile = world_to_map(start)
	var end_tile = world_to_map(end)

	# Determines IDs
	var start_id = _get_id_for_point(start_tile)
	var end_id = _get_id_for_point(end_tile)

	# Return null if navigation is impossible
	if not astar.has_point(start_id) or not astar.has_point(end_id):
		return null

	# Otherwise, find the map
	var path_map = astar.get_point_path(start_id, end_id)

	# Convert Vector3 array (remember, AStar is 3D) to real world points
	var path_world = []
	for point in path_map:
		var point_world = map_to_world(Vector2(point.x, point.y)) + half_cell_size
		path_world.append(point_world)
	return path_world
"

[node name="HeavenThree" type="Node2D"]
script = ExtResource( 13 )

[node name="TileMap" type="TileMap" parent="."]
scale = Vector2( 0.125, 0.125 )
tile_set = ExtResource( 8 )
cell_size = Vector2( 128, 128 )
format = 1
tile_data = PoolIntArray( -2162688, 5, 0, -2162469, 5, 0, -2097152, 5, 0, -2096933, 5, 0, -2031616, 5, 0, -2031397, 5, 0, -1966080, 5, 0, -1965861, 5, 0, -1900544, 5, 0, -1900325, 5, 0, -1835008, 5, 0, -1834789, 5, 0, -1769472, 5, 0, -1769253, 5, 0, -1703936, 5, 0, -1703717, 5, 0, -1638400, 5, 0, -1638181, 5, 0, -1572864, 5, 0, -1572645, 5, 0, -1507328, 5, 0, -1507109, 5, 0, -1441792, 5, 0, -1441573, 5, 0, -1376256, 5, 0, -1376037, 5, 0, -1310720, 5, 0, -1310501, 5, 0, -1245184, 5, 0, -1244965, 5, 0, -1179648, 5, 0, -1179429, 5, 0, -1114112, 5, 0, -1113990, 0, 0, -1113989, 1, 0, -1113988, 2, 0, -1113893, 5, 0, -1048576, 5, 0, -1048454, 5, 0, -1048453, 5, 0, -1048452, 5, 0, -1048357, 5, 0, -983040, 5, 0, -982938, 0, 0, -982937, 1, 0, -982936, 1, 0, -982935, 1, 0, -982934, 1, 0, -982933, 1, 0, -982932, 1, 0, -982931, 1, 0, -982930, 1, 0, -982929, 1, 0, -982928, 1, 0, -982927, 1, 0, -982926, 1, 0, -982925, 1, 0, -982924, 1, 0, -982923, 1, 0, -982922, 1, 0, -982921, 1, 0, -982920, 1, 0, -982919, 1, 0, -982918, 1, 0, -982917, 1, 0, -982916, 1, 0, -982915, 1, 0, -982914, 1, 0, -982913, 1, 0, -982912, 1, 0, -982911, 1, 0, -982910, 1, 0, -982909, 1, 0, -982908, 2, 0, -982821, 5, 0, -917504, 5, 0, -917285, 5, 0, -851968, 5, 0, -851871, 0, 0, -851870, 2, 0, -851749, 5, 0, -786432, 5, 0, -786335, 5, 0, -786334, 5, 0, -786213, 5, 0, -720896, 5, 0, -720799, 5, 0, -720798, 5, 0, -720797, 1, 0, -720796, 2, 0, -720677, 5, 0, -655360, 5, 0, -655141, 5, 0, -589824, 5, 0, -589776, 0, 0, -589775, 2, 0, -589771, 0, 0, -589770, 1, 0, -589769, 1, 0, -589768, 2, 0, -589764, 0, 0, -589763, 1, 0, -589762, 1, 0, -589761, 2, 0, -589757, 0, 0, -589756, 1, 0, -589755, 1, 0, -589754, 2, 0, -589706, 0, 0, -589705, 1, 0, -589704, 1, 0, -589703, 1, 0, -589702, 1, 0, -589701, 1, 0, -589700, 1, 0, -589699, 1, 0, -589698, 1, 0, -589697, 1, 0, -589696, 1, 0, -589695, 1, 0, -589694, 1, 0, -589693, 1, 0, -589692, 1, 0, -589691, 1, 0, -589690, 1, 0, -589689, 1, 0, -589688, 1, 0, -589687, 1, 0, -589686, 1, 0, -589685, 1, 0, -589684, 1, 0, -589683, 1, 0, -589682, 1, 0, -589681, 1, 0, -589680, 1, 0, -589679, 1, 0, -589605, 5, 0, -524288, 5, 0, -524240, 5, 0, -524239, 5, 0, -524186, 0, 0, -524185, 1, 0, -524184, 1, 0, -524183, 2, 0, -524069, 5, 0, -458752, 5, 0, -458708, 0, 0, -458707, 2, 0, -458704, 5, 0, -458703, 5, 0, -458678, 0, 0, -458677, 2, 0, -458533, 5, 0, -393216, 5, 0, -393172, 5, 0, -393171, 5, 0, -393168, 5, 0, -393167, 5, 0, -393069, 3, 0, -392997, 5, 0, -327680, 5, 0, -327640, 0, 0, -327639, 2, 0, -327636, 5, 0, -327635, 5, 0, -327632, 5, 0, -327631, 5, 0, -327583, 0, 0, -327582, 1, 0, -327581, 1, 0, -327580, 2, 0, -327461, 5, 0, -262144, 5, 0, -262104, 5, 0, -262103, 5, 0, -262100, 5, 0, -262099, 5, 0, -262096, 5, 0, -262095, 5, 0, -262068, 0, 0, -262067, 2, 0, -261925, 5, 0, -196608, 5, 0, -196572, 0, 0, -196571, 2, 0, -196568, 5, 0, -196567, 5, 0, -196564, 5, 0, -196563, 5, 0, -196560, 5, 0, -196559, 5, 0, -196459, 3, 0, -196389, 5, 0, -131072, 5, 0, -131036, 5, 0, -131035, 5, 0, -131032, 5, 0, -131031, 5, 0, -131028, 5, 0, -131027, 5, 0, -131024, 5, 0, -131023, 5, 0, -130970, 0, 0, -130969, 1, 0, -130968, 1, 0, -130967, 2, 0, -130853, 5, 0, -65536, 5, 0, -65504, 0, 0, -65503, 2, 0, -65500, 5, 0, -65499, 5, 0, -65496, 5, 0, -65495, 5, 0, -65492, 5, 0, -65491, 5, 0, -65488, 5, 0, -65487, 5, 0, -65458, 0, 0, -65457, 2, 0, -65360, 0, 0, -65359, 1, 0, -65358, 2, 0, -65320, 0, 0, -65319, 1, 0, -65318, 1, 0, -65317, 5, 0, 0, 5, 0, 32, 5, 0, 33, 5, 0, 36, 5, 0, 37, 5, 0, 40, 5, 0, 41, 5, 0, 44, 5, 0, 45, 5, 0, 48, 5, 0, 49, 5, 0, 151, 3, 0, 216, 5, 0, 217, 5, 0, 218, 5, 0, 219, 5, 0, 65536, 5, 0, 65564, 0, 0, 65565, 2, 0, 65568, 5, 0, 65569, 5, 0, 65572, 5, 0, 65573, 5, 0, 65576, 5, 0, 65577, 5, 0, 65580, 5, 0, 65581, 5, 0, 65584, 5, 0, 65585, 5, 0, 65633, 0, 0, 65634, 1, 0, 65635, 1, 0, 65636, 2, 0, 65709, 0, 0, 65710, 2, 0, 65750, 0, 0, 65751, 1, 0, 65752, 5, 0, 65753, 5, 0, 65754, 5, 0, 65755, 5, 0, 131072, 5, 0, 131100, 5, 0, 131101, 5, 0, 131104, 5, 0, 131105, 5, 0, 131108, 5, 0, 131109, 5, 0, 131112, 5, 0, 131113, 5, 0, 131116, 5, 0, 131117, 5, 0, 131120, 5, 0, 131121, 5, 0, 131152, 0, 0, 131153, 2, 0, 131204, 0, 0, 131205, 2, 0, 131251, 0, 0, 131252, 2, 0, 131286, 5, 0, 131287, 5, 0, 131288, 5, 0, 131289, 5, 0, 131290, 5, 0, 131291, 5, 0, 196608, 5, 0, 196632, 0, 0, 196633, 2, 0, 196636, 5, 0, 196637, 5, 0, 196640, 5, 0, 196641, 5, 0, 196644, 5, 0, 196645, 5, 0, 196648, 5, 0, 196649, 5, 0, 196652, 5, 0, 196653, 5, 0, 196656, 5, 0, 196657, 5, 0, 196761, 3, 0, 196777, 0, 0, 196778, 1, 0, 196779, 2, 0, 196820, 0, 0, 196821, 1, 0, 196822, 5, 0, 196823, 5, 0, 196824, 5, 0, 196825, 5, 0, 196826, 5, 0, 196827, 5, 0, 262144, 5, 0, 262168, 5, 0, 262169, 5, 0, 262172, 5, 0, 262173, 5, 0, 262176, 5, 0, 262177, 5, 0, 262180, 5, 0, 262181, 5, 0, 262184, 5, 0, 262185, 5, 0, 262188, 5, 0, 262189, 5, 0, 262192, 5, 0, 262193, 5, 0, 262246, 0, 0, 262247, 1, 0, 262248, 1, 0, 262249, 2, 0, 262270, 0, 0, 262271, 2, 0, 262282, 0, 0, 262283, 2, 0, 262356, 5, 0, 262357, 5, 0, 262358, 5, 0, 262359, 5, 0, 262360, 5, 0, 262361, 5, 0, 262362, 5, 0, 262363, 5, 0, 327680, 5, 0, 327700, 0, 0, 327701, 2, 0, 327704, 5, 0, 327705, 5, 0, 327708, 5, 0, 327709, 5, 0, 327712, 5, 0, 327713, 5, 0, 327716, 5, 0, 327717, 5, 0, 327720, 5, 0, 327721, 5, 0, 327724, 5, 0, 327725, 5, 0, 327728, 5, 0, 327729, 5, 0, 327762, 0, 0, 327763, 2, 0, 327846, 0, 0, 327847, 2, 0, 327861, 0, 0, 327862, 2, 0, 327890, 0, 0, 327891, 1, 0, 327892, 5, 0, 327893, 5, 0, 327894, 5, 0, 327895, 5, 0, 327896, 5, 0, 327897, 5, 0, 327898, 5, 0, 327899, 5, 0, 393216, 5, 0, 393236, 5, 0, 393237, 5, 0, 393240, 5, 0, 393241, 5, 0, 393244, 5, 0, 393245, 5, 0, 393248, 5, 0, 393249, 5, 0, 393252, 5, 0, 393253, 5, 0, 393256, 5, 0, 393257, 5, 0, 393260, 5, 0, 393261, 5, 0, 393264, 5, 0, 393265, 5, 0, 393371, 3, 0, 393426, 5, 0, 393427, 5, 0, 393428, 5, 0, 393429, 5, 0, 393430, 5, 0, 393431, 5, 0, 393432, 5, 0, 393433, 5, 0, 393434, 5, 0, 393435, 5, 0, 458752, 5, 0, 458768, 0, 0, 458769, 2, 0, 458772, 5, 0, 458773, 5, 0, 458776, 5, 0, 458777, 5, 0, 458780, 5, 0, 458781, 5, 0, 458784, 5, 0, 458785, 5, 0, 458788, 5, 0, 458789, 5, 0, 458792, 5, 0, 458793, 5, 0, 458796, 5, 0, 458797, 5, 0, 458800, 5, 0, 458801, 5, 0, 458849, 0, 0, 458850, 1, 0, 458851, 1, 0, 458852, 2, 0, 458898, 5, 0, 458899, 5, 0, 458900, 5, 0, 458914, 0, 0, 458915, 1, 0, 458916, 2, 0, 458960, 0, 0, 458961, 2, 0, 458962, 5, 0, 458963, 5, 0, 458964, 5, 0, 458965, 5, 0, 458966, 5, 0, 458967, 5, 0, 458968, 5, 0, 458969, 5, 0, 458970, 5, 0, 458971, 5, 0, 524288, 5, 0, 524304, 5, 0, 524305, 5, 0, 524308, 5, 0, 524309, 5, 0, 524312, 5, 0, 524313, 5, 0, 524316, 5, 0, 524317, 5, 0, 524320, 5, 0, 524321, 5, 0, 524324, 5, 0, 524325, 5, 0, 524328, 5, 0, 524329, 5, 0, 524332, 5, 0, 524333, 5, 0, 524336, 5, 0, 524337, 5, 0, 524372, 0, 0, 524373, 2, 0, 524433, 5, 0, 524434, 5, 0, 524435, 5, 0, 524436, 5, 0, 524437, 5, 0, 524471, 0, 0, 524472, 2, 0, 524496, 5, 0, 524497, 5, 0, 524498, 5, 0, 524499, 5, 0, 524500, 5, 0, 524501, 5, 0, 524502, 5, 0, 524503, 5, 0, 524504, 5, 0, 524505, 5, 0, 524506, 5, 0, 524507, 5, 0, 589824, 5, 0, 589840, 5, 0, 589841, 5, 0, 589844, 5, 0, 589845, 5, 0, 589848, 5, 0, 589849, 5, 0, 589852, 5, 0, 589853, 5, 0, 589856, 5, 0, 589857, 5, 0, 589860, 5, 0, 589861, 5, 0, 589864, 5, 0, 589865, 5, 0, 589868, 5, 0, 589869, 5, 0, 589872, 5, 0, 589873, 5, 0, 589968, 5, 0, 589969, 5, 0, 589970, 5, 0, 589971, 5, 0, 589972, 5, 0, 589973, 5, 0, 589974, 5, 0, 590030, 0, 0, 590031, 1, 0, 590032, 5, 0, 590033, 5, 0, 590034, 5, 0, 590035, 5, 0, 590036, 5, 0, 590037, 5, 0, 590038, 5, 0, 590039, 5, 0, 590040, 5, 0, 590041, 5, 0, 590042, 5, 0, 590043, 5, 0, 655360, 5, 0, 655361, 1, 0, 655362, 1, 0, 655363, 1, 0, 655364, 1, 0, 655365, 1, 0, 655366, 1, 0, 655367, 1, 0, 655368, 1, 0, 655369, 1, 0, 655372, 1, 0, 655373, 1, 0, 655374, 1, 0, 655375, 1, 0, 655376, 1, 0, 655377, 1, 0, 655378, 1, 0, 655379, 1, 0, 655380, 1, 0, 655381, 1, 0, 655382, 1, 0, 655383, 1, 0, 655384, 1, 0, 655385, 1, 0, 655386, 1, 0, 655387, 1, 0, 655388, 1, 0, 655389, 1, 0, 655390, 1, 0, 655391, 1, 0, 655392, 1, 0, 655393, 1, 0, 655394, 1, 0, 655395, 1, 0, 655396, 1, 0, 655397, 1, 0, 655398, 1, 0, 655399, 1, 0, 655400, 1, 0, 655401, 1, 0, 655402, 1, 0, 655403, 1, 0, 655404, 1, 0, 655405, 1, 0, 655406, 1, 0, 655407, 1, 0, 655408, 1, 0, 655409, 1, 0, 655410, 1, 0, 655411, 1, 0, 655412, 1, 0, 655413, 1, 0, 655414, 1, 0, 655415, 1, 0, 655416, 1, 0, 655417, 1, 0, 655418, 1, 0, 655419, 1, 0, 655420, 1, 0, 655421, 1, 0, 655422, 1, 0, 655423, 1, 0, 655424, 1, 0, 655425, 1, 0, 655426, 1, 0, 655427, 1, 0, 655428, 1, 0, 655429, 1, 0, 655430, 1, 0, 655431, 1, 0, 655432, 1, 0, 655433, 1, 0, 655434, 1, 0, 655435, 1, 0, 655436, 1, 0, 655437, 1, 0, 655438, 1, 0, 655439, 1, 0, 655440, 1, 0, 655441, 1, 0, 655442, 1, 0, 655443, 1, 0, 655444, 1, 0, 655445, 1, 0, 655446, 1, 0, 655447, 1, 0, 655448, 1, 0, 655449, 1, 0, 655450, 1, 0, 655451, 1, 0, 655452, 1, 0, 655453, 1, 0, 655454, 1, 0, 655455, 1, 0, 655456, 1, 0, 655470, 1, 0, 655471, 1, 0, 655472, 1, 0, 655473, 1, 0, 655474, 1, 0, 655475, 1, 0, 655476, 1, 0, 655477, 1, 0, 655478, 1, 0, 655479, 1, 0, 655480, 1, 0, 655481, 1, 0, 655482, 1, 0, 655483, 1, 0, 655484, 1, 0, 655485, 1, 0, 655486, 1, 0, 655487, 1, 0, 655488, 1, 0, 655489, 1, 0, 655490, 1, 0, 655491, 1, 0, 655492, 1, 0, 655493, 1, 0, 655494, 1, 0, 655495, 1, 0, 655496, 1, 0, 655497, 1, 0, 655498, 1, 0, 655499, 1, 0, 655500, 1, 0, 655501, 1, 0, 655502, 1, 0, 655503, 1, 0, 655504, 1, 0, 655505, 1, 0, 655506, 1, 0, 655507, 1, 0, 655508, 1, 0, 655509, 1, 0, 655510, 1, 0, 655511, 1, 0, 655512, 1, 0, 655513, 1, 0, 655514, 1, 0, 655515, 1, 0, 655516, 1, 0, 655517, 1, 0, 655518, 1, 0, 655519, 1, 0, 655520, 1, 0, 655521, 1, 0, 655522, 1, 0, 655523, 1, 0, 655524, 1, 0, 655525, 1, 0, 655526, 1, 0, 655527, 1, 0, 655528, 1, 0, 655529, 1, 0, 655530, 1, 0, 655531, 1, 0, 655532, 1, 0, 655533, 1, 0, 655534, 1, 0, 655535, 1, 0, 655536, 1, 0, 655537, 1, 0, 655538, 1, 0, 655539, 1, 0, 655540, 1, 0, 655541, 1, 0, 655542, 1, 0, 655543, 1, 0, 655544, 1, 0, 655545, 1, 0, 655546, 1, 0, 655547, 1, 0, 655548, 1, 0, 655549, 1, 0, 655550, 1, 0, 655551, 1, 0, 655552, 1, 0, 655553, 1, 0, 655554, 1, 0, 655555, 1, 0, 655556, 1, 0, 655557, 1, 0, 655558, 1, 0, 655559, 1, 0, 655560, 1, 0, 655561, 1, 0, 655562, 1, 0, 655563, 1, 0, 655564, 1, 0, 655565, 1, 0, 655566, 1, 0, 655567, 1, 0, 655568, 1, 0, 655569, 1, 0, 655570, 1, 0, 655571, 1, 0, 655572, 1, 0, 655573, 1, 0, 655574, 1, 0, 655575, 1, 0, 655576, 1, 0, 655577, 1, 0, 655578, 1, 0, 655579, 5, 0, 720896, 5, 0, 720897, 5, 0, 720898, 5, 0, 720899, 5, 0, 720900, 5, 0, 720901, 5, 0, 720902, 5, 0, 720903, 5, 0, 720904, 5, 0, 720905, 5, 0, 720906, 5, 0, 720907, 5, 0, 720908, 5, 0, 720909, 5, 0, 720910, 5, 0, 720911, 5, 0, 720912, 5, 0, 720913, 5, 0, 720914, 5, 0, 720915, 5, 0, 720916, 5, 0, 720917, 5, 0, 720918, 5, 0, 720919, 5, 0, 720920, 5, 0, 720921, 5, 0, 720922, 5, 0, 720923, 5, 0, 720924, 5, 0, 720925, 5, 0, 720926, 5, 0, 720927, 5, 0, 720928, 5, 0, 720929, 5, 0, 720930, 5, 0, 720931, 5, 0, 720932, 5, 0, 720933, 5, 0, 720934, 5, 0, 720935, 5, 0, 720936, 5, 0, 720937, 5, 0, 720938, 5, 0, 720939, 5, 0, 720940, 5, 0, 720941, 5, 0, 720942, 5, 0, 720943, 5, 0, 720944, 5, 0, 720945, 5, 0, 720946, 5, 0, 720947, 5, 0, 720948, 5, 0, 720949, 5, 0, 720950, 5, 0, 720951, 5, 0, 720952, 5, 0, 720953, 5, 0, 720954, 5, 0, 720955, 5, 0, 720956, 5, 0, 720957, 5, 0, 720958, 5, 0, 720959, 5, 0, 720960, 5, 0, 720961, 5, 0, 720962, 5, 0, 720963, 5, 0, 720964, 5, 0, 720965, 5, 0, 720966, 5, 0, 720967, 5, 0, 720968, 5, 0, 720969, 5, 0, 720970, 5, 0, 720971, 5, 0, 720972, 5, 0, 720973, 5, 0, 720974, 5, 0, 720975, 5, 0, 720976, 5, 0, 720977, 5, 0, 720978, 5, 0, 720979, 5, 0, 720980, 5, 0, 720981, 5, 0, 720982, 5, 0, 720983, 5, 0, 720984, 5, 0, 720985, 5, 0, 720986, 5, 0, 720987, 5, 0, 720988, 5, 0, 720989, 5, 0, 720990, 5, 0, 720991, 5, 0, 720992, 5, 0, 720993, 5, 0, 720994, 5, 0, 720995, 5, 0, 720996, 5, 0, 720997, 5, 0, 720998, 5, 0, 720999, 5, 0, 721000, 5, 0, 721001, 5, 0, 721002, 5, 0, 721003, 5, 0, 721004, 5, 0, 721005, 5, 0, 721006, 5, 0, 721007, 5, 0, 721008, 5, 0, 721009, 5, 0, 721010, 5, 0, 721011, 5, 0, 721012, 5, 0, 721013, 5, 0, 721014, 5, 0, 721015, 5, 0, 721016, 5, 0, 721017, 5, 0, 721018, 5, 0, 721019, 5, 0, 721020, 5, 0, 721021, 5, 0, 721022, 5, 0, 721023, 5, 0, 721024, 5, 0, 721025, 5, 0, 721026, 5, 0, 721027, 5, 0, 721028, 5, 0, 721029, 5, 0, 721030, 5, 0, 721031, 5, 0, 721032, 5, 0, 721033, 5, 0, 721034, 5, 0, 721035, 5, 0, 721036, 5, 0, 721037, 5, 0, 721038, 5, 0, 721039, 5, 0, 721040, 5, 0, 721041, 5, 0, 721042, 5, 0, 721043, 5, 0, 721044, 5, 0, 721045, 5, 0, 721046, 5, 0, 721047, 5, 0, 721048, 5, 0, 721049, 5, 0, 721050, 5, 0, 721051, 5, 0, 721052, 5, 0, 721053, 5, 0, 721054, 5, 0, 721055, 5, 0, 721056, 5, 0, 721057, 5, 0, 721058, 5, 0, 721059, 5, 0, 721060, 5, 0, 721061, 5, 0, 721062, 5, 0, 721063, 5, 0, 721064, 5, 0, 721065, 5, 0, 721066, 5, 0, 721067, 5, 0, 721068, 5, 0, 721069, 5, 0, 721070, 5, 0, 721071, 5, 0, 721072, 5, 0, 721073, 5, 0, 721074, 5, 0, 721075, 5, 0, 721076, 5, 0, 721077, 5, 0, 721078, 5, 0, 721079, 5, 0, 721080, 5, 0, 721081, 5, 0, 721082, 5, 0, 721083, 5, 0, 721084, 5, 0, 721085, 5, 0, 721086, 5, 0, 721087, 5, 0, 721088, 5, 0, 721089, 5, 0, 721090, 5, 0, 721091, 5, 0, 721092, 5, 0, 721093, 5, 0, 721094, 5, 0, 721095, 5, 0, 721096, 5, 0, 721097, 5, 0, 721098, 5, 0, 721099, 5, 0, 721100, 5, 0, 721101, 5, 0, 721102, 5, 0, 721103, 5, 0, 721104, 5, 0, 721105, 5, 0, 721106, 5, 0, 721107, 5, 0, 721108, 5, 0, 721109, 5, 0, 721110, 5, 0, 721111, 5, 0, 721112, 5, 0, 721113, 5, 0, 721114, 5, 0, 721115, 5, 0 )
script = SubResource( 1 )

[node name="Enemy" parent="." instance=ExtResource( 4 )]
position = Vector2( 880, 104 )
speed = 20
hp = 3
size = Vector2( 0.5, 0.5 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]
scroll_base_scale = Vector2( 0.5, 0.5 )

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]

[node name="Sprite" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 1.52588e-05, -408 )
scale = Vector2( 1.82917, 0.667462 )
texture = ExtResource( 2 )
centered = false
offset = Vector2( 0, -180 )

[node name="Sprite2" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 1448, 32 )
scale = Vector2( 1.50417, 1 )
texture = ExtResource( 1 )

[node name="Player" parent="." instance=ExtResource( 7 )]
position = Vector2( 48, 32 )

[node name="Enemy2" parent="." instance=ExtResource( 4 )]
position = Vector2( 1952, -184 )
speed = 60
size = Vector2( 0.5, 0.5 )

[node name="ScreenShake" type="Node2D" parent="."]
script = ExtResource( 3 )

[node name="Tween" type="Tween" parent="ScreenShake"]

[node name="ChangeStage" parent="." instance=ExtResource( 5 )]
position = Vector2( 3480, -32 )
scale = Vector2( 0.5, 0.5 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="PauseScreen" parent="CanvasLayer" instance=ExtResource( 6 )]
visible = false

[node name="Star" parent="." instance=ExtResource( 9 )]
position = Vector2( 1104, -160 )

[node name="Star2" parent="." instance=ExtResource( 9 )]
position = Vector2( 2840, -32 )

[node name="Star3" parent="." instance=ExtResource( 9 )]
position = Vector2( 1976, -288 )

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 10 )
volume_db = -5.0
autoplay = true
max_distance = 100000.0

[node name="Spike" parent="." instance=ExtResource( 11 )]
position = Vector2( 176, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike2" parent="." instance=ExtResource( 11 )]
position = Vector2( 752, 152 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike3" parent="." instance=ExtResource( 11 )]
position = Vector2( 688, 152 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike4" parent="." instance=ExtResource( 11 )]
position = Vector2( 624, 152 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike5" parent="." instance=ExtResource( 11 )]
position = Vector2( 560, 152 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike6" parent="." instance=ExtResource( 11 )]
position = Vector2( 496, 152 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike7" parent="." instance=ExtResource( 11 )]
position = Vector2( 432, 152 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike8" parent="." instance=ExtResource( 11 )]
position = Vector2( 368, 152 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike9" parent="." instance=ExtResource( 11 )]
position = Vector2( 304, 152 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike10" parent="." instance=ExtResource( 11 )]
position = Vector2( 1568, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike11" parent="." instance=ExtResource( 11 )]
position = Vector2( 1664, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike12" parent="." instance=ExtResource( 11 )]
position = Vector2( 1640, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike13" parent="." instance=ExtResource( 11 )]
position = Vector2( 1616, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike14" parent="." instance=ExtResource( 11 )]
position = Vector2( 1592, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike15" parent="." instance=ExtResource( 11 )]
position = Vector2( 1712, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike16" parent="." instance=ExtResource( 11 )]
position = Vector2( 1688, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Spike17" parent="." instance=ExtResource( 11 )]
position = Vector2( 1736, 168 )
scale = Vector2( 1.5, 1.5 )

[node name="Enemy4" parent="." instance=ExtResource( 12 )]
position = Vector2( 3208, 112 )

[node name="Enemy5" parent="." instance=ExtResource( 14 )]
position = Vector2( 104, -432 )

[node name="Enemy6" parent="." instance=ExtResource( 14 )]
position = Vector2( 3472, -504 )
[connection signal="tween_completed" from="ScreenShake/Tween" to="ScreenShake" method="_on_Tween_tween_completed"]
